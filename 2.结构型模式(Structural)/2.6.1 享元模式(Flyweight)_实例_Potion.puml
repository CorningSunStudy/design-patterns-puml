@startuml
interface Potion {
  + {static} void drink()
}

class HealingPotion {
  + void drink()
}

Potion <|.. HealingPotion

class HolyWaterPotion {
  + void drink()
}

Potion <|.. HolyWaterPotion

class InvisibilityPotion {
  + void drink()
}

Potion <|.. InvisibilityPotion

class PotionFactory {
  - final Map<String, Potion> potions;
  + Potion createPotion(String potionType)
}
note bottom
Potion createPotion(String type) {
    Potion potion = potions.get(type);
    if (potion == null) {
      switch (type) {
        case "HEALING":
          potion = new HealingPotion();
          potions.put(type, potion);
          break;
        case "HOLY_WATER":
          potion = new HolyWaterPotion();
          potions.put(type, potion);
          break;
        case "INVISIBILITY":
          potion = new InvisibilityPotion();
          potions.put(type, potion);
          break;
        default:
          break;
      }
    }
    return potion;
  }
end note

Potion <--o PotionFactory

@enduml
